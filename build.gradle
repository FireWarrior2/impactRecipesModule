buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "MavenRepo"
            url = "https://repo.maven.apache.org/maven2"
        }
        maven {
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "jitpack"
            url = "https://jitpack.io"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.TheElan:ForgeGradle:f59d5c1f8d'
        classpath "de.undercouch:gradle-download-task:3.1.2"
    }
}

apply plugin: 'forge'
apply plugin: 'signing'

allprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

version = "1.0.1.7"
group = "impact"
archivesBaseName = "Impact-RecipeModule"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "run"
}

repositories {
}

configurations {
    mods
    provided
    embedded
    compile.extendsFrom provided, embedded
}

dependencies {
    provided fileTree(dir: 'libRun/', include:'*.jar')
    compileOnly fileTree(dir: 'libNotRun/', include:'*.jar')
}

runClient {
    jvmArgs "-Xmx4096m", "-Xms1024m"
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    exclude '**/Thumbs.db'
}

jar {
}


task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task devJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives devJar
}